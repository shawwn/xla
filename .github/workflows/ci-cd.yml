name: ci-cd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.9
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
    # Step 4. Install poetry
    # - uses: snok/install-poetry@v1
    - name: Install poetry
      run: |
        which poetry && ( curl -sSL https://install.python-poetry.org | python3 - --uninstall )
        curl -sSL https://install.python-poetry.org | POETRY_PREVIEW=1 python3 -
    # Step 4.1. Update poetry
    - name: Update poetry
      run: poetry self update --preview
    # Step 5. Install our package
    - name: Install package
      run: poetry install
    # Step 6. Run tests for package
    - name: Test with pytest
      run: poetry run pytest tests/ --cov=xlaz --cov-report=xml
    # Step 7. Use Codecov to track coverage
    - uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml   # coverage report
        fail_ci_if_error: true  # terminate workflow if there's an error
    # # Step 8. Build documentation
    # - name: Build documentation
    #   run: poetry run make html --directory docs/
  cd:
    # Only run this job if the "ci" job passes
    needs: ci
    # Only run this job if new work is pushed to "main"
    if: github.repository_owner == 'shawwn' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.9
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: main
    # Step 4. Install and upgrade poetry
    - name: Install poetry
      run: |
        which poetry && ( curl -sSL https://install.python-poetry.org | python3 - --uninstall )
        curl -sSL https://install.python-poetry.org | POETRY_PREVIEW=1 python3 -
    # Step 5. Use PSR to make release
    - name: Python Semantic Release
      run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish
    # Step 6. Publish to TestPyPI
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
    # Step 7. Test install from TestPyPI
    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          xlaz
    # Step 8. Publish to PyPI
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true